name: Roblox FFlag Tracker

on:
  schedule:
    - cron: "0 9 * * *"    # Daily at 9 AM UTC
    - cron: "0 */6 * * *"  # Every 6 hours
  workflow_dispatch:        # Manual trigger

permissions:
  contents: write
  pages: write

jobs:
  run-tracker:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEYS: ${{ secrets.OPENAI_API_KEYS }}
      GEMINI_API_KEYS: ${{ secrets.GEMINI_API_KEYS }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Cache manifest repo
        uses: actions/cache@v3
        with:
          path: .fflag-repo-cache
          key: ${{ runner.os }}-manifest
          restore-keys: |
            ${{ runner.os }}-manifest

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure output folder exists
        run: |
          mkdir -p output
          echo "Output folder checked/created."

      - name: Run Roblox FFlag Tracker with key rotation
        env:
          SKIP_ASSETS: "true"
        run: |
          export FFLAG_REPO_CACHE=./.fflag-repo-cache
          
          OPENAI_KEY=$(echo $OPENAI_API_KEYS | tr ',' '\n' | shuf -n1 | xargs)
          GEMINI_KEY=$(echo $GEMINI_API_KEYS | tr ',' '\n' | shuf -n1 | xargs)

          echo "Using OpenAI key: ${OPENAI_KEY:0:4}****"
          echo "Using Gemini key: ${GEMINI_KEY:0:4}****"

          export OPENAI_API_KEY=$OPENAI_KEY
          export GEMINI_API_KEY=$GEMINI_KEY

          python updateff.py

      - name: Debug working directory
        run: |
          pwd
          ls -R

      - name: Inject report into index.html
        run: |
          REPORT_HTML=$(<output/FFlag_Report.html)
          perl -0777 -i -pe "s|<div id=\"reportContent\"></div>|<div id=\"reportContent\">$REPORT_HTML</div>|s" output/index.html
          echo "✅ Injected FFlag_Report.html into index.html"

      - name: Copy static assets
        run: |
          rm -rf output/assets
          if [ -d assets ]; then
            cp -r assets output/
            echo "✅ Copied assets/ → output/assets"
          else
            echo "⚠️ Warning: assets/ folder not found"
          fi

      - name: List output folder
        run: |
          echo "Contents of output folder:"
          ls -R output

      - name: Upload output as artifact (backup)
        uses: actions/upload-artifact@v4
        with:
          name: fflag-output
          path: ./output

      - name: Publish to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./output

name: Roblox FFlag Tracker

on:
  schedule:
    - cron: "0 9 * * *"    # Daily at 9 AM UTC
    - cron: "0 */6 * * *"  # Every 6 hours
  workflow_dispatch:        # Manual trigger

permissions:
  contents: write   # Needed to push updates
  pages: write      # Needed to publish to GitHub Pages

jobs:
  run-tracker:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEYS: ${{ secrets.OPENAI_API_KEYS }}    # Comma-separated
      GEMINI_API_KEYS: ${{ secrets.GEMINI_API_KEYS }}    # Comma-separated

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      # ✅ New step: cache manifest repo so we don’t reclone it every run
      - name: Cache manifest repo
        uses: actions/cache@v3
        with:
          path: .fflag-repo-cache
          key: ${{ runner.os }}-manifest
          restore-keys: |
            ${{ runner.os }}-manifest

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure output folder exists
        run: |
          mkdir -p output
          echo "Output folder checked/created."

      - name: Run Roblox FFlag Tracker with key rotation
        run: |
          export FFLAG_REPO_CACHE=./.fflag-repo-cache

          # Pick random keys for this run (trim spaces)
          OPENAI_KEY=$(echo $OPENAI_API_KEYS | tr ',' '\n' | shuf -n1 | xargs)
          GEMINI_KEY=$(echo $GEMINI_API_KEYS | tr ',' '\n' | shuf -n1 | xargs)

          # Masked logging for security
          echo "Using OpenAI key: ${OPENAI_KEY:0:4}****"
          echo "Using Gemini key: ${GEMINI_KEY:0:4}****"

          # Export keys for Python
          export OPENAI_API_KEY=$OPENAI_KEY
          export GEMINI_API_KEY=$GEMINI_KEY

          # Run tracker (fail workflow if it errors)
          python updateff.py

      - name: List output folder
        run: |
          echo "Contents of output folder:"
          ls -R output

      - name: Upload output as artifact (backup)
        uses: actions/upload-artifact@v4
        with:
          name: fflag-output
          path: ./output

      - name: Publish to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./output
